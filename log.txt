




=====================================>>>>> Running Test ./PA1_input_output_samples/T01...


              *** tokens.txt diffrences ***
1,15c1,15
< 1.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
< 2.	(KEYWORD, int) (ID, a) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
< 4.	(ID, a) (SYMBOL, =) (NUM, 2) (SYMBOL, +) (NUM, 2) (SYMBOL, ;) 
< 5.	(ID, a) (SYMBOL, =) (ID, a) (SYMBOL, -) (NUM, 3) (SYMBOL, ;) 
< 6.	(ID, cde) (SYMBOL, =) (ID, a) (SYMBOL, ;) 
< 7.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (SYMBOL, )) (SYMBOL, {) 
< 8.	(ID, a) (SYMBOL, =) (NUM, 3) (SYMBOL, ;) 
< 9.	(ID, e) (SYMBOL, =) (NUM, 7) (SYMBOL, ;) 
< 10.	(SYMBOL, }) 
< 11.	(KEYWORD, else) 
< 12.	(SYMBOL, {) 
< 13.	(ID, b) (SYMBOL, =) (ID, a) (SYMBOL, <) (ID, cde) (SYMBOL, ;) 
< 14.	(SYMBOL, {) (ID, cde) (SYMBOL, =) (NUM, 2) (SYMBOL, ;) 
< 15.	(SYMBOL, }) (SYMBOL, }) 
< 16.	(KEYWORD, return) (SYMBOL, ;) 
---
> 1.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {)
> 2.	(KEYWORD, int) (ID, a) (SYMBOL, =) (NUM, 0) (SYMBOL, ;)
> 4.	(ID, a) (SYMBOL, =) (NUM, 2) (SYMBOL, +) (NUM, 2) (SYMBOL, ;)
> 5.	(ID, a) (SYMBOL, =) (ID, a) (SYMBOL, -) (NUM, 3) (SYMBOL, ;)
> 6.	(ID, cde) (SYMBOL, =) (ID, a) (SYMBOL, ;)
> 7.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (SYMBOL, )) (SYMBOL, {)
> 8.	(ID, a) (SYMBOL, =) (NUM, 3) (SYMBOL, ;)
> 9.	(ID, e) (SYMBOL, =) (NUM, 7) (SYMBOL, ;)
> 10.	(SYMBOL, })
> 11.	(KEYWORD, else)
> 12.	(SYMBOL, {)
> 13.	(ID, b) (SYMBOL, =) (ID, a) (SYMBOL, <) (ID, cde) (SYMBOL, ;)
> 14.	(SYMBOL, {) (ID, cde) (SYMBOL, =) (NUM, 2) (SYMBOL, ;)
> 15.	(SYMBOL, }) (SYMBOL, })
> 16.	(KEYWORD, return) (SYMBOL, ;)
\ No newline at end of file


              *** lexical_errors.txt diffrences ***
1,5c1,5
< 7.	(3d, Invalid number) 
< 9.	(cd!, Invalid input) 
< 11.	(*/, Unmatched comment) 
< 14.	(@, Invalid input) 
< 16.	(/* comm..., Unclosed comment) 
---
> 7.	(3d, Invalid number)
> 9.	(cd!, Invalid input)
> 11.	(*/, Unmatched comment)
> 14.	(@, Invalid input)
> 16.	(/* comm..., Unclosed comment)
\ No newline at end of file


              *** symbol_table.txt diffrences ***
15c15
< 15.	e
---
> 15.	e
\ No newline at end of file




=====================================>>>>> Running Test ./PA1_input_output_samples/T02...


              *** tokens.txt diffrences ***
1,15c1,12
< 1.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
< 2.	(KEYWORD, int) (ID, a) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
< 4.	(ID, a) (SYMBOL, =) (NUM, 2) (SYMBOL, +) (NUM, 2) (SYMBOL, ;) 
< 5.	(ID, a) (SYMBOL, =) (ID, a) (SYMBOL, -) (NUM, 3) (SYMBOL, ;) 
< 6.	(ID, cde) (SYMBOL, =) (ID, a) (SYMBOL, ;) 
< 7.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (SYMBOL, )) (SYMBOL, {) 
< 8.	(ID, a) (SYMBOL, =) (NUM, 3) (SYMBOL, ;) 
< 9.	(ID, e) (SYMBOL, =) (NUM, 7) (SYMBOL, ;) 
< 10.	(SYMBOL, }) 
< 11.	(KEYWORD, else) 
< 12.	(SYMBOL, {) 
< 13.	(ID, b) (SYMBOL, =) (ID, a) (SYMBOL, <) (ID, cde) (SYMBOL, ;) 
< 14.	(SYMBOL, {) (ID, cde) (SYMBOL, =) (NUM, 2) (SYMBOL, ;) 
< 15.	(SYMBOL, }) (SYMBOL, }) 
< 16.	(KEYWORD, return) (SYMBOL, ;) 
---
> 2.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {)
> 3.	(KEYWORD, int) (ID, prod) (SYMBOL, ;)
> 4.	(KEYWORD, int) (ID, i) (SYMBOL, ;)
> 5.	(ID, prod) (SYMBOL, =) (NUM, 1) (SYMBOL, ;)
> 6.	(ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;)
> 7.	(KEYWORD, while) (SYMBOL, () (ID, i) (SYMBOL, <) (NUM, 7) (SYMBOL, )) (SYMBOL, {)
> 8.	(ID, prod) (SYMBOL, =) (ID, i) (SYMBOL, *) (ID, prod) (SYMBOL, ;)
> 9.	(ID, i) (SYMBOL, =) (ID, i) (SYMBOL, +) (NUM, 2) (SYMBOL, ;)
> 10.	(SYMBOL, })
> 11.	(ID, output) (SYMBOL, () (ID, prod) (SYMBOL, )) (SYMBOL, ;)
> 12.	(KEYWORD, return) (SYMBOL, ;)
> 14.	(SYMBOL, })


              *** lexical_errors.txt diffrences ***
1,5c1
< 7.	(3d, Invalid number) 
< 9.	(cd!, Invalid input) 
< 11.	(*/, Unmatched comment) 
< 14.	(@, Invalid input) 
< 16.	(/* comm..., Unclosed comment) 
---
> There is no lexical error.
\ No newline at end of file


              *** symbol_table.txt diffrences ***
12,15c12,14
< 12.	a
< 13.	cde
< 14.	b
< 15.	e
---
> 12.	prod
> 13.	i
> 14.	output
\ No newline at end of file




=====================================>>>>> Running Test ./PA1_input_output_samples/T03...


              *** tokens.txt diffrences ***
1,15c1,15
< 1.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
< 2.	(KEYWORD, int) (ID, a) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
< 4.	(ID, a) (SYMBOL, =) (NUM, 2) (SYMBOL, +) (NUM, 2) (SYMBOL, ;) 
< 5.	(ID, a) (SYMBOL, =) (ID, a) (SYMBOL, -) (NUM, 3) (SYMBOL, ;) 
< 6.	(ID, cde) (SYMBOL, =) (ID, a) (SYMBOL, ;) 
< 7.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (SYMBOL, )) (SYMBOL, {) 
< 8.	(ID, a) (SYMBOL, =) (NUM, 3) (SYMBOL, ;) 
< 9.	(ID, e) (SYMBOL, =) (NUM, 7) (SYMBOL, ;) 
< 10.	(SYMBOL, }) 
< 11.	(KEYWORD, else) 
< 12.	(SYMBOL, {) 
< 13.	(ID, b) (SYMBOL, =) (ID, a) (SYMBOL, <) (ID, cde) (SYMBOL, ;) 
< 14.	(SYMBOL, {) (ID, cde) (SYMBOL, =) (NUM, 2) (SYMBOL, ;) 
< 15.	(SYMBOL, }) (SYMBOL, }) 
< 16.	(KEYWORD, return) (SYMBOL, ;) 
---
> 1.	(KEYWORD, int) (ID, f) (SYMBOL, () (KEYWORD, int) (ID, a) (SYMBOL, )) (SYMBOL, {)
> 2.	(KEYWORD, return) (ID, a) (SYMBOL, *) (ID, a) (SYMBOL, *) (ID, a) (SYMBOL, ;)
> 3.	(SYMBOL, })
> 4.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {)
> 5.	(KEYWORD, int) (ID, a) (SYMBOL, ;)
> 6.	(KEYWORD, int) (ID, b) (SYMBOL, ;)
> 7.	(ID, a) (SYMBOL, =) (NUM, 8) (SYMBOL, ;)
> 8.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, <) (NUM, 5) (SYMBOL, )) (SYMBOL, {)
> 9.	(ID, a) (SYMBOL, =) (ID, f) (SYMBOL, () (ID, a) (SYMBOL, )) (SYMBOL, ;)
> 10.	(SYMBOL, })
> 11.	(KEYWORD, else) (SYMBOL, {)
> 12.	(ID, a) (SYMBOL, =) (NUM, 4) (SYMBOL, ;)
> 13.	(SYMBOL, })
> 15.	(KEYWORD, break) (SYMBOL, ;)
> 16.	(SYMBOL, })


              *** lexical_errors.txt diffrences ***
1,5c1
< 7.	(3d, Invalid number) 
< 9.	(cd!, Invalid input) 
< 11.	(*/, Unmatched comment) 
< 14.	(@, Invalid input) 
< 16.	(/* comm..., Unclosed comment) 
---
> There is no lexical error.
\ No newline at end of file


              *** symbol_table.txt diffrences ***
11c11
< 11.	main
---
> 11.	f
13,15c13,14
< 13.	cde
< 14.	b
< 15.	e
---
> 13.	main
> 14.	b
\ No newline at end of file




=====================================>>>>> Running Test ./PA1_input_output_samples/T04...


              *** tokens.txt diffrences ***
1,15c1,17
< 1.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
< 2.	(KEYWORD, int) (ID, a) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
< 4.	(ID, a) (SYMBOL, =) (NUM, 2) (SYMBOL, +) (NUM, 2) (SYMBOL, ;) 
< 5.	(ID, a) (SYMBOL, =) (ID, a) (SYMBOL, -) (NUM, 3) (SYMBOL, ;) 
< 6.	(ID, cde) (SYMBOL, =) (ID, a) (SYMBOL, ;) 
< 7.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (SYMBOL, )) (SYMBOL, {) 
< 8.	(ID, a) (SYMBOL, =) (NUM, 3) (SYMBOL, ;) 
< 9.	(ID, e) (SYMBOL, =) (NUM, 7) (SYMBOL, ;) 
< 10.	(SYMBOL, }) 
< 11.	(KEYWORD, else) 
< 12.	(SYMBOL, {) 
< 13.	(ID, b) (SYMBOL, =) (ID, a) (SYMBOL, <) (ID, cde) (SYMBOL, ;) 
< 14.	(SYMBOL, {) (ID, cde) (SYMBOL, =) (NUM, 2) (SYMBOL, ;) 
< 15.	(SYMBOL, }) (SYMBOL, }) 
< 16.	(KEYWORD, return) (SYMBOL, ;) 
---
> 1.	(ID, vod) (ID, min) (SYMBOL, () (ID, voi) (SYMBOL, )) (SYMBOL, {)
> 2.	(KEYWORD, switch) (SYMBOL, () (ID, arr) (SYMBOL, [) (ID, efg) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, {)
> 3.	(KEYWORD, case) (ID, bcd) (SYMBOL, :)
> 4.	(ID, b) (SYMBOL, =) (ID, b) (SYMBOL, +) (NUM, 1) (SYMBOL, ;)
> 5.	(KEYWORD, case) (NUM, 3) (SYMBOL, :)
> 6.	(ID, b) (SYMBOL, =) (ID, b) (SYMBOL, +) (NUM, 2) (SYMBOL, ;)
> 7.	(KEYWORD, return) (SYMBOL, ;)
> 8.	(KEYWORD, case) (NUM, 4) (SYMBOL, :)
> 9.	(SYMBOL, {)
> 10.	(ID, x) (SYMBOL, =) (NUM, 5) (SYMBOL, ;)
> 11.	(ID, b) (SYMBOL, =) (ID, u) (SYMBOL, *) (NUM, 123) (SYMBOL, ;)
> 12.	(KEYWORD, break) (SYMBOL, ;) (SYMBOL, })
> 13.	(KEYWORD, default) (SYMBOL, :)
> 14.	(ID, b) (SYMBOL, =) (ID, b) (SYMBOL, -) (NUM, 1) (SYMBOL, ;)
> 15.	(SYMBOL, })
> 16.	(KEYWORD, return) (SYMBOL, ;)
> 17.	(SYMBOL, })


              *** lexical_errors.txt diffrences ***
1,5c1,3
< 7.	(3d, Invalid number) 
< 9.	(cd!, Invalid input) 
< 11.	(*/, Unmatched comment) 
< 14.	(@, Invalid input) 
< 16.	(/* comm..., Unclosed comment) 
---
> 2.	(2x, Invalid number)
> 3.	(2a, Invalid number)
> 10.	(#, Invalid input)


              *** symbol_table.txt diffrences ***
11,15c11,19
< 11.	main
< 12.	a
< 13.	cde
< 14.	b
< 15.	e
---
> 11.	vod
> 12.	min
> 13.	voi
> 14.	arr
> 15.	efg
> 16.	bcd
> 17.	b
> 18.	x
> 19.	u
\ No newline at end of file




=====================================>>>>> Running Test ./PA1_input_output_samples/T05...


              *** tokens.txt diffrences ***
1,15c1,43
< 1.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
< 2.	(KEYWORD, int) (ID, a) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
< 4.	(ID, a) (SYMBOL, =) (NUM, 2) (SYMBOL, +) (NUM, 2) (SYMBOL, ;) 
< 5.	(ID, a) (SYMBOL, =) (ID, a) (SYMBOL, -) (NUM, 3) (SYMBOL, ;) 
< 6.	(ID, cde) (SYMBOL, =) (ID, a) (SYMBOL, ;) 
< 7.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (SYMBOL, )) (SYMBOL, {) 
< 8.	(ID, a) (SYMBOL, =) (NUM, 3) (SYMBOL, ;) 
< 9.	(ID, e) (SYMBOL, =) (NUM, 7) (SYMBOL, ;) 
< 10.	(SYMBOL, }) 
< 11.	(KEYWORD, else) 
< 12.	(SYMBOL, {) 
< 13.	(ID, b) (SYMBOL, =) (ID, a) (SYMBOL, <) (ID, cde) (SYMBOL, ;) 
< 14.	(SYMBOL, {) (ID, cde) (SYMBOL, =) (NUM, 2) (SYMBOL, ;) 
< 15.	(SYMBOL, }) (SYMBOL, }) 
< 16.	(KEYWORD, return) (SYMBOL, ;) 
---
> 1.	(KEYWORD, int) (ID, b) (SYMBOL, ;)
> 2.	(KEYWORD, int) (ID, foo) (SYMBOL, () (KEYWORD, int) (ID, d) (SYMBOL, ,) (KEYWORD, int) (ID, e) (SYMBOL, )) (SYMBOL, {)
> 3.	(KEYWORD, int) (ID, f) (SYMBOL, ;)
> 4.	(ID, f) (SYMBOL, =) (ID, foo) (SYMBOL, () (ID, d) (SYMBOL, )) (SYMBOL, ;)
> 5.	(ID, b) (SYMBOL, =) (ID, e) (SYMBOL, +) (ID, f) (SYMBOL, ;)
> 6.	(ID, le) (SYMBOL, () (ID, d) (SYMBOL, <) (NUM, 0) (SYMBOL, )) (SYMBOL, {)
> 7.	(ID, f) (SYMBOL, =) (ID, f) (SYMBOL, +) (ID, d) (SYMBOL, ;)
> 8.	(ID, d) (SYMBOL, =) (ID, d) (SYMBOL, -) (NUM, 1) (SYMBOL, ;)
> 9.	(KEYWORD, if) (SYMBOL, () (ID, d) (SYMBOL, ==) (NUM, 5) (SYMBOL, ))
> 10.	(KEYWORD, break) (SYMBOL, ;)
> 11.	(KEYWORD, else) (ID, d) (SYMBOL, =) (ID, st) (SYMBOL, ;)
> 12.	(SYMBOL, })
> 14.	(KEYWORD, return) (ID, f) (SYMBOL, +) (ID, b) (SYMBOL, ;)
> 15.	(SYMBOL, })
> 16.	(KEYWORD, int) (ID, arr) (SYMBOL, [) (NUM, 3) (SYMBOL, ]) (SYMBOL, ;)
> 17.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {)
> 18.	(KEYWORD, int) (ID, a) (SYMBOL, ;)
> 19.	(ID, a) (SYMBOL, =) (NUM, 3) (SYMBOL, +) (NUM, 11) (SYMBOL, ;)
> 20.	(ID, b) (SYMBOL, =) (NUM, 5) (SYMBOL, *) (ID, a) (SYMBOL, +) (ID, foo) (SYMBOL, () (ID, a) (SYMBOL, ,) (ID, a) (SYMBOL, )) (SYMBOL, ;)
> 21.	(ID, arr) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, =) (ID, b) (SYMBOL, +) (NUM, 3) (SYMBOL, ;)
> 22.	(ID, arr) (SYMBOL, [) (NUM, 2) (SYMBOL, ]) (SYMBOL, =) (ID, foo) (SYMBOL, () (ID, arr) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, ,) (ID, arr) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;)
> 23.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (NUM, 3) (SYMBOL, )) (SYMBOL, {)
> 24.	(ID, arr) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, =) (NUM, 7) (SYMBOL, ;)
> 25.	(SYMBOL, })
> 26.	(KEYWORD, else)
> 27.	(SYMBOL, {)
> 28.	(KEYWORD, switch) (SYMBOL, () (ID, arr) (SYMBOL, [) (NUM, 2) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, {)
> 29.	(KEYWORD, case) (NUM, 2) (SYMBOL, :)
> 30.	(ID, b) (SYMBOL, =) (ID, b) (SYMBOL, +) (NUM, 1) (SYMBOL, ;)
> 31.	(KEYWORD, case) (NUM, 3) (SYMBOL, :)
> 32.	(ID, b) (SYMBOL, =) (ID, b) (SYMBOL, +) (NUM, 2) (SYMBOL, ;)
> 33.	(KEYWORD, return) (SYMBOL, ;)
> 34.	(KEYWORD, case) (SYMBOL, :)
> 35.	(SYMBOL, {)
> 36.	(ID, u) (SYMBOL, =) (NUM, 5) (SYMBOL, ;)
> 37.	(ID, b) (SYMBOL, =) (ID, u) (SYMBOL, *) (NUM, 123) (SYMBOL, ;)
> 38.	(KEYWORD, break) (SYMBOL, ;) (SYMBOL, })
> 39.	(KEYWORD, default) (SYMBOL, :)
> 40.	(ID, b) (SYMBOL, =) (ID, b) (SYMBOL, -) (NUM, 1) (SYMBOL, ;)
> 41.	(SYMBOL, })
> 42.	(SYMBOL, })
> 43.	(KEYWORD, return) (SYMBOL, ;)
> 44.	(SYMBOL, })


              *** lexical_errors.txt diffrences ***
1,5c1,2
< 7.	(3d, Invalid number) 
< 9.	(cd!, Invalid input) 
< 11.	(*/, Unmatched comment) 
< 14.	(@, Invalid input) 
< 16.	(/* comm..., Unclosed comment) 
---
> 6.	(whi$, Invalid input)
> 11.	(1d, Invalid number)


              *** symbol_table.txt diffrences ***
11,15c11,21
< 11.	main
< 12.	a
< 13.	cde
< 14.	b
< 15.	e
---
> 11.	b
> 12.	foo
> 13.	d
> 14.	e
> 15.	f
> 16.	le
> 17.	st
> 18.	arr
> 19.	main
> 20.	a
> 21.	u
\ No newline at end of file




=====================================>>>>> Running Test ./PA1_input_output_samples/T06...


              *** tokens.txt diffrences ***
1,15c1,13
< 1.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
< 2.	(KEYWORD, int) (ID, a) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
< 4.	(ID, a) (SYMBOL, =) (NUM, 2) (SYMBOL, +) (NUM, 2) (SYMBOL, ;) 
< 5.	(ID, a) (SYMBOL, =) (ID, a) (SYMBOL, -) (NUM, 3) (SYMBOL, ;) 
< 6.	(ID, cde) (SYMBOL, =) (ID, a) (SYMBOL, ;) 
< 7.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (SYMBOL, )) (SYMBOL, {) 
< 8.	(ID, a) (SYMBOL, =) (NUM, 3) (SYMBOL, ;) 
< 9.	(ID, e) (SYMBOL, =) (NUM, 7) (SYMBOL, ;) 
< 10.	(SYMBOL, }) 
< 11.	(KEYWORD, else) 
< 12.	(SYMBOL, {) 
< 13.	(ID, b) (SYMBOL, =) (ID, a) (SYMBOL, <) (ID, cde) (SYMBOL, ;) 
< 14.	(SYMBOL, {) (ID, cde) (SYMBOL, =) (NUM, 2) (SYMBOL, ;) 
< 15.	(SYMBOL, }) (SYMBOL, }) 
< 16.	(KEYWORD, return) (SYMBOL, ;) 
---
> 1.	(KEYWORD, void) (ID, min) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {)
> 2.	(KEYWORD, switch) (SYMBOL, () (ID, arr) (SYMBOL, [) (ID, g) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, {)
> 3.	(KEYWORD, case) (NUM, 2) (SYMBOL, :)
> 4.	(ID, b) (SYMBOL, =) (ID, b) (SYMBOL, +) (NUM, 1) (SYMBOL, ;)
> 5.	(KEYWORD, case) (NUM, 3) (SYMBOL, :)
> 6.	(ID, b) (SYMBOL, =) (ID, b) (SYMBOL, +) (NUM, 2) (SYMBOL, ;)
> 7.	(KEYWORD, return) (SYMBOL, ;)
> 8.	(KEYWORD, case) (NUM, 4) (SYMBOL, :)
> 9.	(SYMBOL, {)
> 10.	(ID, x) (SYMBOL, =) (NUM, 5) (SYMBOL, ;)
> 11.	(ID, b) (SYMBOL, =) (ID, u) (SYMBOL, *) (NUM, 123) (SYMBOL, ;)
> 12.	(KEYWORD, break) (SYMBOL, ;) (SYMBOL, })
> 13.	(KEYWORD, default) (SYMBOL, :)


              *** lexical_errors.txt diffrences ***
1,5c1,2
< 7.	(3d, Invalid number) 
< 9.	(cd!, Invalid input) 
< 11.	(*/, Unmatched comment) 
< 14.	(@, Invalid input) 
< 16.	(/* comm..., Unclosed comment) 
---
> 4.	(*/, Unmatched comment)
> 13.	(/*this ..., Unclosed comment)


              *** symbol_table.txt diffrences ***
11,13c11,13
< 11.	main
< 12.	a
< 13.	cde
---
> 11.	min
> 12.	arr
> 13.	g
15c15,16
< 15.	e
---
> 15.	x
> 16.	u
\ No newline at end of file




=====================================>>>>> Running Test ./PA1_input_output_samples/T07...


              *** tokens.txt diffrences ***
1,15c1,12
< 1.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
< 2.	(KEYWORD, int) (ID, a) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
< 4.	(ID, a) (SYMBOL, =) (NUM, 2) (SYMBOL, +) (NUM, 2) (SYMBOL, ;) 
< 5.	(ID, a) (SYMBOL, =) (ID, a) (SYMBOL, -) (NUM, 3) (SYMBOL, ;) 
< 6.	(ID, cde) (SYMBOL, =) (ID, a) (SYMBOL, ;) 
< 7.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (SYMBOL, )) (SYMBOL, {) 
< 8.	(ID, a) (SYMBOL, =) (NUM, 3) (SYMBOL, ;) 
< 9.	(ID, e) (SYMBOL, =) (NUM, 7) (SYMBOL, ;) 
< 10.	(SYMBOL, }) 
< 11.	(KEYWORD, else) 
< 12.	(SYMBOL, {) 
< 13.	(ID, b) (SYMBOL, =) (ID, a) (SYMBOL, <) (ID, cde) (SYMBOL, ;) 
< 14.	(SYMBOL, {) (ID, cde) (SYMBOL, =) (NUM, 2) (SYMBOL, ;) 
< 15.	(SYMBOL, }) (SYMBOL, }) 
< 16.	(KEYWORD, return) (SYMBOL, ;) 
---
> 1.	(KEYWORD, int) (ID, f) (SYMBOL, () (KEYWORD, int) (ID, a) (SYMBOL, )) (SYMBOL, {)
> 2.	(KEYWORD, void) (ID, g) (SYMBOL, () (KEYWORD, int) (ID, b) (SYMBOL, )) (SYMBOL, {)
> 3.	(ID, output) (SYMBOL, () (ID, b) (SYMBOL, )) (SYMBOL, ;)
> 4.	(ID, f) (SYMBOL, () (ID, b) (SYMBOL, -) (NUM, 1) (SYMBOL, )) (SYMBOL, ;)
> 5.	(SYMBOL, })
> 6.	(KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, ==) (NUM, 1) (SYMBOL, )) (SYMBOL, {)
> 7.	(ID, output) (SYMBOL, () (ID, a) (SYMBOL, )) (SYMBOL, ;)
> 8.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;)
> 9.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
> 10.	(ID, g) (SYMBOL, () (ID, a) (SYMBOL, )) (SYMBOL, ;)
> 11.	(SYMBOL, })
> 14.	(SYMBOL, })


              *** lexical_errors.txt diffrences ***
1,5c1,3
< 7.	(3d, Invalid number) 
< 9.	(cd!, Invalid input) 
< 11.	(*/, Unmatched comment) 
< 14.	(@, Invalid input) 
< 16.	(/* comm..., Unclosed comment) 
---
> 2.	(*/, Unmatched comment)
> 13.	(/, Invalid input)
> 16.	(/*void ..., Unclosed comment)
\ No newline at end of file


              *** symbol_table.txt diffrences ***
11c11
< 11.	main
---
> 11.	f
13c13
< 13.	cde
---
> 13.	g
15c15
< 15.	e
---
> 15.	output
\ No newline at end of file




=====================================>>>>> Running Test ./PA1_input_output_samples/T08...


              *** tokens.txt diffrences ***
1,15c1,15
< 1.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
< 2.	(KEYWORD, int) (ID, a) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
< 4.	(ID, a) (SYMBOL, =) (NUM, 2) (SYMBOL, +) (NUM, 2) (SYMBOL, ;) 
< 5.	(ID, a) (SYMBOL, =) (ID, a) (SYMBOL, -) (NUM, 3) (SYMBOL, ;) 
< 6.	(ID, cde) (SYMBOL, =) (ID, a) (SYMBOL, ;) 
< 7.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (SYMBOL, )) (SYMBOL, {) 
< 8.	(ID, a) (SYMBOL, =) (NUM, 3) (SYMBOL, ;) 
< 9.	(ID, e) (SYMBOL, =) (NUM, 7) (SYMBOL, ;) 
< 10.	(SYMBOL, }) 
< 11.	(KEYWORD, else) 
< 12.	(SYMBOL, {) 
< 13.	(ID, b) (SYMBOL, =) (ID, a) (SYMBOL, <) (ID, cde) (SYMBOL, ;) 
< 14.	(SYMBOL, {) (ID, cde) (SYMBOL, =) (NUM, 2) (SYMBOL, ;) 
< 15.	(SYMBOL, }) (SYMBOL, }) 
< 16.	(KEYWORD, return) (SYMBOL, ;) 
---
> 1.	(KEYWORD, int) (ID, f) (SYMBOL, () (KEYWORD, int) (ID, a) (SYMBOL, )) (SYMBOL, {)
> 2.	(KEYWORD, void) (ID, g) (SYMBOL, () (KEYWORD, int) (ID, b) (SYMBOL, )) (SYMBOL, {)
> 3.	(ID, output) (SYMBOL, () (ID, b) (SYMBOL, )) (SYMBOL, ;)
> 4.	(ID, f) (SYMBOL, () (ID, b) (SYMBOL, -) (ID, h) (SYMBOL, )) (SYMBOL, ;)
> 5.	(SYMBOL, })
> 6.	(KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, ==) (NUM, 1) (SYMBOL, )) (SYMBOL, {)
> 7.	(SYMBOL, () (ID, a) (SYMBOL, )) (SYMBOL, ;)
> 8.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;)
> 9.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
> 10.	(ID, g) (SYMBOL, () (ID, a) (SYMBOL, )) (SYMBOL, ;)
> 11.	(SYMBOL, })
> 14.	(SYMBOL, })
> 17.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {)
> 18.	(ID, f) (SYMBOL, () (NUM, 10) (SYMBOL, )) (SYMBOL, ;)
> 19.	(SYMBOL, })


              *** lexical_errors.txt diffrences ***
1,5c1,2
< 7.	(3d, Invalid number) 
< 9.	(cd!, Invalid input) 
< 11.	(*/, Unmatched comment) 
< 14.	(@, Invalid input) 
< 16.	(/* comm..., Unclosed comment) 
---
> 4.	(1g, Invalid number)
> 7.	(out$, Invalid input) (put£, Invalid input)
\ No newline at end of file


              *** symbol_table.txt diffrences ***
11c11
< 11.	main
---
> 11.	f
13c13
< 13.	cde
---
> 13.	g
15c15,17
< 15.	e
---
> 15.	output
> 16.	h
> 17.	main
\ No newline at end of file




=====================================>>>>> Running Test ./PA1_input_output_samples/T09...


              *** tokens.txt diffrences ***
1,15c1,30
< 1.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
< 2.	(KEYWORD, int) (ID, a) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
< 4.	(ID, a) (SYMBOL, =) (NUM, 2) (SYMBOL, +) (NUM, 2) (SYMBOL, ;) 
< 5.	(ID, a) (SYMBOL, =) (ID, a) (SYMBOL, -) (NUM, 3) (SYMBOL, ;) 
< 6.	(ID, cde) (SYMBOL, =) (ID, a) (SYMBOL, ;) 
< 7.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (SYMBOL, )) (SYMBOL, {) 
< 8.	(ID, a) (SYMBOL, =) (NUM, 3) (SYMBOL, ;) 
< 9.	(ID, e) (SYMBOL, =) (NUM, 7) (SYMBOL, ;) 
< 10.	(SYMBOL, }) 
< 11.	(KEYWORD, else) 
< 12.	(SYMBOL, {) 
< 13.	(ID, b) (SYMBOL, =) (ID, a) (SYMBOL, <) (ID, cde) (SYMBOL, ;) 
< 14.	(SYMBOL, {) (ID, cde) (SYMBOL, =) (NUM, 2) (SYMBOL, ;) 
< 15.	(SYMBOL, }) (SYMBOL, }) 
< 16.	(KEYWORD, return) (SYMBOL, ;) 
---
> 1.	(KEYWORD, int) (ID, count) (SYMBOL, ;)
> 2.	(KEYWORD, int) (ID, result) (SYMBOL, [) (NUM, 50) (SYMBOL, ]) (SYMBOL, ;)
> 5.	(KEYWORD, int) (ID, f) (SYMBOL, () (KEYWORD, int) (ID, a) (SYMBOL, ,) (KEYWORD, int) (ID, result) (SYMBOL, [) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, {)
> 6.	(ID, count) (SYMBOL, =) (ID, count) (SYMBOL, +) (NUM, 1) (SYMBOL, ;)
> 7.	(KEYWORD, if) (SYMBOL, () (ID, result) (SYMBOL, [) (ID, a) (SYMBOL, -) (NUM, 1) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, {)
> 8.	(KEYWORD, return) (ID, result) (SYMBOL, [) (ID, a) (SYMBOL, -) (NUM, 1) (SYMBOL, ]) (SYMBOL, ;)
> 9.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
> 10.	(KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, ==) (NUM, 1) (SYMBOL, )) (SYMBOL, {)
> 11.	(ID, result) (SYMBOL, [) (ID, a) (SYMBOL, -) (NUM, 1) (SYMBOL, ]) (SYMBOL, =) (NUM, 1) (SYMBOL, ;)
> 12.	(KEYWORD, return) (NUM, 1) (SYMBOL, ;)
> 13.	(SYMBOL, }) (KEYWORD, else) (KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, ==) (SYMBOL, ==) (SYMBOL, =) (NUM, 2) (SYMBOL, )) (SYMBOL, {)
> 14.	(ID, result) (SYMBOL, [) (ID, a) (SYMBOL, -) (NUM, 1) (SYMBOL, ]) (SYMBOL, =) (NUM, 1) (SYMBOL, ;)
> 15.	(KEYWORD, return) (NUM, 1) (SYMBOL, ;)
> 16.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {)
> 17.	(ID, result) (SYMBOL, [) (ID, a) (SYMBOL, -) (NUM, 1) (SYMBOL, ]) (SYMBOL, =) (ID, f) (SYMBOL, () (ID, a) (SYMBOL, -) (NUM, 2) (SYMBOL, ,) (ID, result) (SYMBOL, )) (SYMBOL, +) (ID, f) (SYMBOL, () (ID, a) (SYMBOL, -) (NUM, 1) (SYMBOL, ,) (ID, result) (SYMBOL, )) (SYMBOL, ;)
> 18.	(KEYWORD, return) (ID, result) (SYMBOL, [) (ID, a) (SYMBOL, -) (NUM, 1) (SYMBOL, ]) (SYMBOL, ;)
> 19.	(SYMBOL, })
> 20.	(SYMBOL, })
> 21.	(SYMBOL, })
> 23.	(KEYWORD, void) (ID, main) (SYMBOL, () (SYMBOL, )) (SYMBOL, {)
> 24.	(KEYWORD, int) (ID, i) (SYMBOL, ;)
> 25.	(ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, ;)
> 26.	(KEYWORD, while) (SYMBOL, () (ID, i) (SYMBOL, <) (NUM, 50) (SYMBOL, )) (SYMBOL, {)
> 27.	(ID, result) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, =) (NUM, 0) (SYMBOL, ;)
> 28.	(ID, i) (SYMBOL, =) (ID, i) (SYMBOL, +) (NUM, 1) (SYMBOL, ;)
> 29.	(SYMBOL, })
> 30.	(ID, count) (SYMBOL, =) (NUM, 0) (SYMBOL, ;)
> 31.	(ID, output) (SYMBOL, () (ID, f) (SYMBOL, () (NUM, 40) (SYMBOL, ,) (ID, result) (SYMBOL, )) (SYMBOL, )) (SYMBOL, ;)
> 32.	(ID, output) (SYMBOL, () (ID, count) (SYMBOL, )) (SYMBOL, ;)
> 33.	(SYMBOL, })


              *** lexical_errors.txt diffrences ***
1,5c1,2
< 7.	(3d, Invalid number) 
< 9.	(cd!, Invalid input) 
< 11.	(*/, Unmatched comment) 
< 14.	(@, Invalid input) 
< 16.	(/* comm..., Unclosed comment) 
---
> 5.	(#, Invalid input)
> 23.	(void$, Invalid input)
\ No newline at end of file


              *** symbol_table.txt diffrences ***
11,15c11,17
< 11.	main
< 12.	a
< 13.	cde
< 14.	b
< 15.	e
---
> 11.	count
> 12.	result
> 13.	f
> 14.	a
> 15.	main
> 16.	i
> 17.	output
\ No newline at end of file




=====================================>>>>> Running Test ./PA1_input_output_samples/T10...


              *** tokens.txt diffrences ***
1,15c1,54
< 1.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
< 2.	(KEYWORD, int) (ID, a) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
< 4.	(ID, a) (SYMBOL, =) (NUM, 2) (SYMBOL, +) (NUM, 2) (SYMBOL, ;) 
< 5.	(ID, a) (SYMBOL, =) (ID, a) (SYMBOL, -) (NUM, 3) (SYMBOL, ;) 
< 6.	(ID, cde) (SYMBOL, =) (ID, a) (SYMBOL, ;) 
< 7.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (SYMBOL, )) (SYMBOL, {) 
< 8.	(ID, a) (SYMBOL, =) (NUM, 3) (SYMBOL, ;) 
< 9.	(ID, e) (SYMBOL, =) (NUM, 7) (SYMBOL, ;) 
< 10.	(SYMBOL, }) 
< 11.	(KEYWORD, else) 
< 12.	(SYMBOL, {) 
< 13.	(ID, b) (SYMBOL, =) (ID, a) (SYMBOL, <) (ID, cde) (SYMBOL, ;) 
< 14.	(SYMBOL, {) (ID, cde) (SYMBOL, =) (NUM, 2) (SYMBOL, ;) 
< 15.	(SYMBOL, }) (SYMBOL, }) 
< 16.	(KEYWORD, return) (SYMBOL, ;) 
---
> 1.	(KEYWORD, int) (ID, b) (SYMBOL, ;)
> 2.	(KEYWORD, int) (ID, foo) (SYMBOL, () (KEYWORD, int) (ID, d) (SYMBOL, ,) (KEYWORD, int) (ID, e) (SYMBOL, )) (SYMBOL, {)
> 3.	(KEYWORD, int) (ID, f) (SYMBOL, ;)
> 4.	(KEYWORD, void) (ID, foo2) (SYMBOL, () (KEYWORD, int) (ID, k) (SYMBOL, [) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, {)
> 5.	(KEYWORD, return) (ID, k) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, +) (ID, k) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, ;)
> 6.	(SYMBOL, })
> 7.	(KEYWORD, int) (ID, fff) (SYMBOL, [) (NUM, 2) (SYMBOL, ]) (SYMBOL, ;)
> 8.	(ID, fff) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, =) (ID, d) (SYMBOL, ;)
> 9.	(ID, fff) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, =) (ID, d) (SYMBOL, +) (NUM, 1) (SYMBOL, ;)
> 10.	(ID, f) (SYMBOL, =) (ID, foo2) (SYMBOL, () (ID, fff) (SYMBOL, )) (SYMBOL, ;)
> 11.	(ID, b) (SYMBOL, =) (ID, e) (SYMBOL, +) (ID, f) (SYMBOL, ;)
> 12.	(KEYWORD, while) (SYMBOL, () (ID, d) (SYMBOL, <) (NUM, 0) (SYMBOL, )) (SYMBOL, {)
> 13.	(ID, f) (SYMBOL, =) (ID, f) (SYMBOL, +) (ID, d) (SYMBOL, ;)
> 14.	(ID, d) (SYMBOL, =) (ID, d) (SYMBOL, -) (NUM, 1) (SYMBOL, ;)
> 15.	(KEYWORD, if) (SYMBOL, () (ID, d) (SYMBOL, ==) (SYMBOL, ))
> 16.	(KEYWORD, break) (SYMBOL, ;)
> 17.	(KEYWORD, else) (ID, d) (SYMBOL, =) (NUM, 1) (SYMBOL, ;)
> 18.	(SYMBOL, })
> 20.	(KEYWORD, return) (ID, f) (SYMBOL, +) (ID, b) (SYMBOL, ;)
> 21.	(SYMBOL, })
> 22.	(KEYWORD, int) (ID, arr) (SYMBOL, [) (NUM, 3) (SYMBOL, ]) (SYMBOL, ;)
> 23.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {)
> 24.	(KEYWORD, int) (ID, a) (SYMBOL, ;)
> 25.	(ID, a) (SYMBOL, =) (SYMBOL, -) (NUM, 3) (SYMBOL, +) (SYMBOL, +) (NUM, 11) (SYMBOL, ;)
> 26.	(ID, b) (SYMBOL, =) (NUM, 5) (SYMBOL, *) (ID, a) (SYMBOL, +) (ID, foo) (SYMBOL, () (ID, a) (SYMBOL, ,) (ID, a) (SYMBOL, )) (SYMBOL, ;)
> 27.	(ID, arr) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, =) (ID, b) (SYMBOL, +) (SYMBOL, -) (NUM, 3) (SYMBOL, ;)
> 28.	(ID, arr) (SYMBOL, [) (NUM, 2) (SYMBOL, ]) (SYMBOL, =) (ID, foo) (SYMBOL, () (ID, arr) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, ,) (ID, arr) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;)
> 29.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (NUM, 3) (SYMBOL, )) (SYMBOL, {)
> 30.	(ID, arr) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, =) (SYMBOL, -) (NUM, 7) (SYMBOL, ;)
> 31.	(SYMBOL, })
> 32.	(KEYWORD, else)
> 33.	(SYMBOL, {)
> 34.	(KEYWORD, switch) (SYMBOL, () (ID, arr) (SYMBOL, [) (NUM, 2) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, {)
> 35.	(KEYWORD, case) (NUM, 2) (SYMBOL, :)
> 36.	(ID, b) (SYMBOL, =) (ID, b) (SYMBOL, +) (NUM, 1) (SYMBOL, ;)
> 37.	(KEYWORD, case) (NUM, 3) (SYMBOL, :)
> 38.	(ID, b) (SYMBOL, =) (ID, b) (SYMBOL, +) (NUM, 2) (SYMBOL, ;)
> 39.	(KEYWORD, return) (SYMBOL, ;)
> 40.	(KEYWORD, case) (SYMBOL, :)
> 41.	(SYMBOL, {)
> 42.	(ID, u) (SYMBOL, =) (NUM, 5) (SYMBOL, ;)
> 43.	(ID, b) (SYMBOL, =) (ID, u) (SYMBOL, *) (SYMBOL, -) (NUM, 123) (SYMBOL, ;)
> 44.	(KEYWORD, break) (SYMBOL, ;) (SYMBOL, })
> 45.	(KEYWORD, default) (SYMBOL, :)
> 46.	(ID, b) (SYMBOL, =) (ID, b) (SYMBOL, -) (SYMBOL, -) (NUM, 1) (SYMBOL, ;)
> 47.	(SYMBOL, })
> 48.	(SYMBOL, })
> 49.	(KEYWORD, return) (SYMBOL, ;)
> 50.	(SYMBOL, })
> 52.	(KEYWORD, int) (ID, foo) (SYMBOL, () (KEYWORD, int) (ID, d) (SYMBOL, ,) (KEYWORD, int) (ID, e) (SYMBOL, )) (SYMBOL, {)
> 53.	(KEYWORD, int) (ID, a) (SYMBOL, ;)
> 54.	(ID, a) (SYMBOL, =) (NUM, 5) (SYMBOL, ;)
> 55.	(KEYWORD, while) (SYMBOL, () (ID, a) (SYMBOL, <) (NUM, 10) (SYMBOL, )) (KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, ==) (NUM, 5) (SYMBOL, )) (KEYWORD, break) (SYMBOL, ;) (KEYWORD, else) (ID, a) (SYMBOL, =) (ID, a) (SYMBOL, +) (NUM, 1) (SYMBOL, ;)
> 56.	(SYMBOL, })


              *** lexical_errors.txt diffrences ***
1,5c1
< 7.	(3d, Invalid number) 
< 9.	(cd!, Invalid input) 
< 11.	(*/, Unmatched comment) 
< 14.	(@, Invalid input) 
< 16.	(/* comm..., Unclosed comment) 
---
> There is no lexical error.
\ No newline at end of file


              *** symbol_table.txt diffrences ***
11,15c11,22
< 11.	main
< 12.	a
< 13.	cde
< 14.	b
< 15.	e
---
> 11.	b
> 12.	foo
> 13.	d
> 14.	e
> 15.	f
> 16.	foo2
> 17.	k
> 18.	fff
> 19.	arr
> 20.	main
> 21.	a
> 22.	u
\ No newline at end of file
